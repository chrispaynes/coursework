= doctype html
html
  head
    = css
      #search-results tr:hover {
        background-color: lightgray;
        cursor: pointer;
      }
  body
    form id="search-form" onsubmit="return false"
      input type="text" name="search"
      input id="search-btn" type="submit" value="Search"

    table width="100%"
      thead
        tr style="text-align: left;"
          th width="40%" Title
          th width="30%" Author
          th width="10%" Year
          th width="20%" ID
      tbody id="search-results"

    script type="text/javascript" src="http://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous"
    = javascript
      // serializes search form when submitting HTTP POST request
      // makes async HTTP call to Go's http.HandleFunc("/search"...) at REST endpoint
      function submitSearch() {
        $.ajax({
          url: "/search",
          method: "POST",
          data: $("#search-form").serialize(),
          // returns parsed JSON data or returns no results
          success: function(rawData) {
            if(!JSON.parse(rawData)) return;
            var searchResults = $("#search-results");
            searchResults.empty();

            // maps over parsed data and writes it to the DOM.
            // clicking on <tr> sends async HTTP request with the
            // book id to Go's http.HandleFunc("/books/add"...) at REST endpoint.
            // the endpoint adds the selected <tr>'s book to the database
            JSON.parse(rawData).map(function(res) {
              var row = $("<tr><td>" + res.Title + "</td><td>"
                          + res.Author + "</td><td>" + res.Year
                          + "</td><td>" + res.ID + "</td></tr>");
              searchResults.append(row);
              row.on("click", function() {
                $.ajax({
                  url: "/books/add?id=" + res.ID,
                  method: "GET"
                });
              });
            });
          }
        });

        // prevents default button action behavior
        return false;
      }
      // listen() is an immediately invoked function expression calling
      // submitSearch() upon clicking the search button
      (function listen(){
        var s_btn = document.getElementById("search-btn");
        if(window.addEventListener) {
          s_btn.addEventListener("click", submitSearch, false);
        }
        if(window.attachEvent) {
          s_btn.attachEvent("onclick", submitSearch);
        }
      }());